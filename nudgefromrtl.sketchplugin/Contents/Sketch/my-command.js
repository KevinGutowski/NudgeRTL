var that=this;function __skpm_run(e,t){that.context=t;var r=function(e){var t={};function r(n){if(t[n])return t[n].exports;var a=t[n]={i:n,l:!1,exports:{}};return e[n].call(a.exports,a,a.exports,r),a.l=!0,a.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:n})},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=0)}([function(e,t){var r,n;Object.defineProperty(t,"__esModule",{value:!0}),t.default=s,t.increaseHorizontallyRTL=function(e){s(e),u(a)},t.decreaseHorizontallyRTL=function(e){s(e),u(-a)},t.increaseHorizontallyRTLLarge=function(e){s(e),u(o)},t.decreaseHorizontallyRTLLarge=function(e){s(e),u(-o)};var a=NSUserDefaults.standardUserDefaults().integerForKey("nudgeDistanceSmall"),o=NSUserDefaults.standardUserDefaults().integerForKey("nudgeDistanceBig"),i=NSUserDefaults.standardUserDefaults().boolForKey("tryToFitToPixelBounds");function s(e){n=e.document,r=e.selection}function u(e){r.forEach(function(t){var r=t.frame(),n=r.x()-e,a=r.y(),o=r.width()+e,s=r.height();i&&(n=Math.round(n),a=Math.round(a),o=Math.round(o),s=Math.round(s)),t.frame().setRectByIgnoringProportions(NSMakeRect(n,a,o,s)),t.parentGroup()&&t.parentGroup().layerDidEndResize()}),n.reloadInspector()}}]);"default"===e&&"function"==typeof r?r(t):r[e](t)}that.increaseHorizontallyRTL=__skpm_run.bind(this,"increaseHorizontallyRTL"),that.onRun=__skpm_run.bind(this,"default"),that.decreaseHorizontallyRTL=__skpm_run.bind(this,"decreaseHorizontallyRTL"),that.increaseHorizontallyRTLLarge=__skpm_run.bind(this,"increaseHorizontallyRTLLarge"),that.decreaseHorizontallyRTLLarge=__skpm_run.bind(this,"decreaseHorizontallyRTLLarge");